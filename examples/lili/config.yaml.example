# notifiers/telegram 可以设置多个, 比如
# notifiers:
#   - type: bearychat.incoming
#     url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
#     to_channel: house_info
#   - type: telegram
#     token: "YOUR_TELEGRAM_TOKEN"
#     chat_id: "@house_sz"

# 搜索知乎关键词
zhihu:
  - keywords:
    - BearyChat
    notifiers:
      - type: bearychat.incoming
        url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
        to_channel: 不是真的lili

# 搜索v2ex关键词
v2ex:
  - keywords:
    - BearyChat
    notifiers:
      - type: bearychat.incoming
        url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
        to_channel: 不是真的lili

# 根据 tag 或者 user 轮询 instagram
instagram:
  - tags:
    - arkdome
    - matsumotoooooo
    notifiers:
      - type: bearychat.incoming
        url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
        to_channel: 云养猫
  - usernames:
    - dabie.cat
    notifiers:
      - type: bearychat.incoming
        url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
        to_channel: 云养猫

# 根据 keywords 或者一定条件跟踪 hackernews
# name must NOT be same
hackernews:
  - name: slack
    keywords:
    - slack
    - telegram
    - whatsapp
    notifiers:
    - type: bearychat.incoming
      url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
      to_channel: 不是真的lili
  - name: rocry
    min_score: 50 # 如果少于这个分数不通知
    min_comment_count: 5 # 如果少于这个评论数不通知
    notifiers:
    - type: bearychat.incoming
      url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
      to_channel: rocry_news
  - name: coinew
    keywords:
      - bitcoin
      - blockchain
      - cryptocurrency
      - BTC
      - Cardano
    min_score: 50
    min_comment_count: 5
    notifiers:
      - type: telegram
        token: "YOUR_TELEGRAM_TOKEN"
        chat_id: "@coinew"
        parse_mode: markdown

# 根据 id 查某个豆瓣用户的 status
# 比如在 https://www.douban.com/people/arkdome/statuses 在某条原创的动态右键->inspect, 然后就能看到类似 data-uid="144859503"
douban:
  - id: "144859503"
    notifiers:
    - type: bearychat.incoming
      url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
      to_channel: 云养猫

# 定期查询链家的成交记录
house_deal:
  - name: 北京
    notifiers:
    - type: telegram
      token: "YOUR_TELEGRAM_TOKEN"
      chat_id: "@house_bj"
  - name: 广州
    notifiers:
    - type: telegram
      token: "YOUR_TELEGRAM_TOKEN"
      chat_id: "@house_gz"
  - name: 深圳
    notifiers:
      - type: bearychat.incoming
        url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
        to_channel: house_info
      - type: telegram
        token: "YOUR_TELEGRAM_TOKEN"
        chat_id: "@house_sz"
  - name: 天津
  - name: 成都
  - name: 南京
  - name: 杭州
  - name: 青岛
  - name: 大连
  - name: 厦门
  - name: 武汉
  - name: 重庆
  - name: 长沙
  - name: 西安
  - name: 济南
  - name: 石家庄
  - name: 东莞
  - name: 佛山
  - name: 合肥
  - name: 烟台
  - name: 中山
  - name: 珠海
  - name: 沈阳
  - name: 苏州
  - name: 廊坊
  - name: 太原
  - name: 惠州

house:
  - name: 北京
    subscribers:
      - min_price: 100 # 万 # don't work for now
        notifiers:
        - type: telegram
          token: "YOUR_TELEGRAM_TOKEN"
          chat_id: "@house_bj"
  - name: 广州
    subscribers:
      - min_price: 100 # 万
        notifiers:
        - type: telegram
          token: "YOUR_TELEGRAM_TOKEN"
          chat_id: "@house_gz"
  - name: 深圳
    subscribers:
      - min_price: 100 # 万
        notifiers:
        - type: telegram
          token: "YOUR_TELEGRAM_TOKEN"
          chat_id: "@house_sz"
        - type: bearychat.incoming
          url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
          to_channel: house_info
  # - name: 天津
  # - name: 成都
  # - name: 南京
  # - name: 杭州
  # - name: 青岛
  # - name: 大连
  # - name: 厦门
  # - name: 武汉
  # - name: 重庆
  # - name: 长沙
  # - name: 西安
  # - name: 济南
  # - name: 石家庄
  # - name: 东莞
  # - name: 佛山
  # - name: 合肥
  # - name: 烟台
  # - name: 中山
  # - name: 珠海
  # - name: 沈阳
  # - name: 苏州
  # - name: 廊坊
  # - name: 太原
  # - name: 惠州

rent58:
  - province: gz
    district: tianhe
    room_num: 2
    keywords: 
      - 猎德花园
    notifiers: 
    - type: telegram
      token: YOUR_TELEGRAM_TOKEN
      parse_mode: markdown
      chat_id: "-272896937"
  - province: sz
    district: nanshan
    keywords: 
      - 田廈翡翠明珠花园
      - 厚德品园
      - 桃花园
      - 阳光里雅居
      - 荔园大厦
      - 阳光华艺大厦
      - 友邻公寓
      - 星海名城
      - 新德家园
      - 东方银座公馆
    notifiers: 
    - type: bearychat.incoming
      url: https://hook.bearychat.com/=bw52O/incoming/xxxxxxxxx
      to_channel: house_rent

localbitcoin:
  - currency: CNY
    interval: 1
    notifiers:
      - type: telegram
        token: YOUR_TELEGRAM_TOKEN
        chat_id: "@local_bitcoin"
        parse_mode: markdown
coinmarket:
  - currency: CNY
    interval: 5
    notifiers:
      - type: telegram
        token: YOUR_TELEGRAM_TOKEN
        chat_id: "@coin_market_cap"


reddit:
  - subreddits: 
    - funny
    - china
    interval: 60
    media_only: true
    min_ups_ratio: 0.95
    min_score: 5
    notifiers:
      - type: telegram.media
        token: YOUR_TELEGRAM_TOKEN
        chat_id: "-1001138808140"

tumblr:
  - name: rocry-dashboard
    interval: 120
    type: dashboard
    media_only: true
    consumer_key: REPLACE_ME
    consumer_secret: REPLACE_ME
    token: REPLACE_ME
    token_secret: REPLACE_ME
    notifiers:
      - type: telegram.media
        token: YOUR_TELEGRAM_TOKEN
        chat_id: "-1001138808140"
flickr:
  - name: rocry
    interval: 120
    method: flickr.photos.getContactsPhotos
    consumer_key: "REPLACE_ME"
    consumer_secret: "REPLACE_ME"
    token: "72157691919157235-REPLACE_ME"
    token_secret: "REPLACE_ME"
    notifiers:
      - type: telegram.media
        token: YOUR_TELEGRAM_TOKEN
        chat_id: "-1001138808140"

twitter:
  - name: rocry
    interval: 235
    consumer_key: "REPLACE_ME"
    consumer_secret: "REPLACE_ME"
    token: "REPLACE_ME"
    token_secret: "REPLACE_ME"
    username: RoCry
    notifiers:
      - type: telegram
        parse_mode: markdown
        token: YOUR_TELEGRAM_TOKEN
        chat_id: "-1001138808140"